{"ast":null,"code":"var _jsxFileName = \"/Users/meka/Sites/frontend-tech-test/src/Maze.js\";\nimport React from \"react\";\nimport * as images from \"./images\";\nimport \"./Maze.css\";\n\nfunction randomNumber(max = 21) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction lol(ligne) {\n  if (ligne[1][randomNumber()].passable) {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: images.stairsDown,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    });\n  }\n}\n\nfunction Maze({\n  maze\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Maze\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, maze.tiles.map(row => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Maze-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, row.map(cell => /*#__PURE__*/React.createElement(\"img\", {\n    src: cell.passable ? images.floor : images.wall,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Maze;","map":{"version":3,"sources":["/Users/meka/Sites/frontend-tech-test/src/Maze.js"],"names":["React","images","randomNumber","max","Math","floor","random","lol","ligne","passable","stairsDown","Maze","maze","tiles","map","row","cell","wall"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,OAAO,YAAP;;AAGA,SAASC,YAAT,CAAsBC,GAAG,GAAG,EAA5B,EAA+B;AAC7B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACD;;AAED,SAASI,GAAT,CAAaC,KAAb,EAAmB;AACjB,MAAGA,KAAK,CAAC,CAAD,CAAL,CAASN,YAAY,EAArB,EAAyBO,QAA5B,EAAqC;AACnC,wBACE;AAAK,MAAA,GAAG,EAAER,MAAM,CAACS,UAAjB;AAA6B,MAAA,GAAG,EAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;AACF;;AAGD,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACtB,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAeC,GAAG,iBACjB;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,GAAG,CAACD,GAAJ,CAAQE,IAAI,iBACZ;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACP,QAAL,GAAgBR,MAAM,CAACI,KAAvB,GAA+BJ,MAAM,CAACgB,IAAhD;AAAsD,IAAA,GAAG,EAAC,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFJ,CADD,CADH,CADF;AAYD;;AAED,eAAeN,IAAf","sourcesContent":["import React from \"react\"\n\nimport * as images from \"./images\"\nimport \"./Maze.css\"\n\n\nfunction randomNumber(max = 21){\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nfunction lol(ligne){\n  if(ligne[1][randomNumber()].passable){\n    return(\n      <img src={images.stairsDown} alt=\"\" />\n    )\n  }\n}\n\n\nfunction Maze({ maze }) {\n  return (\n    <div className=\"Maze\">\n      {maze.tiles.map(row => (\n        <div className=\"Maze-row\">\n          {\n            row.map(cell => (\n            <img src={cell.passable ? images.floor : images.wall} alt=\"\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Maze\n"]},"metadata":{},"sourceType":"module"}