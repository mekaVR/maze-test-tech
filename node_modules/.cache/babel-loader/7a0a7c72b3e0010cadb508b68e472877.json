{"ast":null,"code":"var _jsxFileName = \"/Users/meka/Sites/frontend-tech-test/src/Maze.js\";\nimport React from \"react\";\nimport * as images from \"./images\";\nimport \"./Maze.css\";\n\nclass Maze extends React.Component {\n  _entryAndExit(indexRow, indexCell, cell, maze) {\n    if (indexRow === 0) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: indexCell === 1 ? images.stairsUp : images.wall,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 14\n        }\n      });\n    } else if (indexRow === maze.length - 1) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: indexCell === maze.length - 2 ? images.stairsDown : images.wall,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: cell.passable ? images.floor : images.wall,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      maze\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Maze\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, maze.tiles.map((row, indexRow, mazeLength) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Maze-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, row.map((cell, indexCell) => this._entryAndExit(indexRow, indexCell, cell, mazeLength)))));\n  }\n\n} // function Maze({ maze }) {\n//   return (\n//     <div className=\"Maze\">\n//       {maze.tiles.map((row, indexRow, mazeLength) => (\n//         <div className=\"Maze-row\">\n//           {row.map((cell, indexCell) => (\n//             this._entryAndExit(indexRow, indexCell, cell, mazeLength)\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   )\n// }\n\n\nexport default Maze;","map":{"version":3,"sources":["/Users/meka/Sites/frontend-tech-test/src/Maze.js"],"names":["React","images","Maze","Component","_entryAndExit","indexRow","indexCell","cell","maze","stairsUp","wall","length","stairsDown","passable","floor","render","props","tiles","map","row","mazeLength"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,OAAO,YAAP;;AAGA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAEhCC,EAAAA,aAAa,CAACC,QAAD,EAAWC,SAAX,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAiC;AAC7C,QAAGH,QAAQ,KAAK,CAAhB,EAAkB;AAChB,0BAAO;AAAK,QAAA,GAAG,EAAEC,SAAS,KAAK,CAAd,GAAkBL,MAAM,CAACQ,QAAzB,GAAoCR,MAAM,CAACS,IAArD;AAA2D,QAAA,GAAG,EAAC,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO,IAAGL,QAAQ,KAAKG,IAAI,CAACG,MAAL,GAAY,CAA5B,EAA+B;AACpC,0BAAO;AAAK,QAAA,GAAG,EAAEL,SAAS,KAAKE,IAAI,CAACG,MAAL,GAAY,CAA1B,GAA8BV,MAAM,CAACW,UAArC,GAAkDX,MAAM,CAACS,IAAnE;AAAyE,QAAA,GAAG,EAAC,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,MAEA;AACL,0BAAO;AAAK,QAAA,GAAG,EAAEH,IAAI,CAACM,QAAL,GAAgBZ,MAAM,CAACa,KAAvB,GAA+Bb,MAAM,CAACS,IAAhD;AAAsD,QAAA,GAAG,EAAC,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAW,KAAKQ,KAAtB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCR,IAAI,CAACS,KAAL,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAMd,QAAN,EAAgBe,UAAhB,kBACd;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,GAAG,CAACD,GAAJ,CAAQ,CAACX,IAAD,EAAOD,SAAP,KACP,KAAKF,aAAL,CAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,IAAxC,EAA8Ca,UAA9C,CADD,CADH,CADD,CADD,CADJ;AAWD;;AAzBgC,C,CA4BnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAelB,IAAf","sourcesContent":["import React from \"react\"\n\nimport * as images from \"./images\"\nimport \"./Maze.css\"\n\n\nclass Maze extends React.Component {\n\n   _entryAndExit(indexRow, indexCell, cell, maze){\n    if(indexRow === 0){\n      return <img src={indexCell === 1 ? images.stairsUp : images.wall} alt=\"\" />\n    } else if(indexRow === maze.length-1) {\n      return <img src={indexCell === maze.length-2 ? images.stairsDown : images.wall} alt=\"\" />\n    } else {\n      return <img src={cell.passable ? images.floor : images.wall} alt=\"\" />\n    }\n  }\n\n  render() {\n    const { maze } = this.props\n    return (\n        <div className=\"Maze\">\n        {maze.tiles.map((row, indexRow, mazeLength) => (\n          <div className=\"Maze-row\">\n            {row.map((cell, indexCell) => (\n              this._entryAndExit(indexRow, indexCell, cell, mazeLength)\n            ))}\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\n// function Maze({ maze }) {\n//   return (\n//     <div className=\"Maze\">\n//       {maze.tiles.map((row, indexRow, mazeLength) => (\n//         <div className=\"Maze-row\">\n//           {row.map((cell, indexCell) => (\n//             this._entryAndExit(indexRow, indexCell, cell, mazeLength)\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   )\n// }\n\nexport default Maze\n"]},"metadata":{},"sourceType":"module"}