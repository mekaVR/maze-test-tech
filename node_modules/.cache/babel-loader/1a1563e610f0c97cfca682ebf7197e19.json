{"ast":null,"code":"var _jsxFileName = \"/Users/meka/Sites/frontend-tech-test/src/Maze.js\";\nimport React from \"react\";\nimport * as images from \"./images\";\nimport \"./Maze.css\";\n\nfunction fuckBrain(indexRow, indexCell) {\n  switch (indexRow) {\n    case indexRow === 1:\n      console.log('Oranges are $0.59 a pound.');\n      break;\n\n    case 'Mangoes':\n    case 'Papayas':\n      console.log('Mangoes and papayas are $2.79 a pound.'); // expected output: \"Mangoes and papayas are $2.79 a pound.\"\n\n      break;\n\n    default:\n      console.log(`Sorry, we are out of ${expr}.`);\n  }\n}\n\nfunction Maze({\n  maze\n}) {\n  console.log(maze.tiles);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Maze\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, maze.tiles.map((row, indexRow) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Maze-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, row.map((cell, indexCell) => indexRow === 0 ? /*#__PURE__*/React.createElement(\"img\", {\n    src: indexCell === 1 ? images.stairsUp : images.wall,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: cell.passable ? images.floor : images.wall,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default Maze;","map":{"version":3,"sources":["/Users/meka/Sites/frontend-tech-test/src/Maze.js"],"names":["React","images","fuckBrain","indexRow","indexCell","console","log","expr","Maze","maze","tiles","map","row","cell","stairsUp","wall","passable","floor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,OAAO,YAAP;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,SAA7B,EAAuC;AACrC,UAAQD,QAAR;AACE,SAAKA,QAAQ,KAAK,CAAlB;AACEE,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA;;AACF,SAAK,SAAL;AACA,SAAK,SAAL;AACED,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EADF,CAEE;;AACA;;AACF;AACED,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBC,IAAK,GAAzC;AAVJ;AAYD;;AAGD,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACtBJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,KAAjB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAMT,QAAN,kBACd;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,GAAG,CAACD,GAAJ,CAAQ,CAACE,IAAD,EAAOT,SAAP,KACPD,QAAQ,KAAK,CAAb,gBACE;AAAK,IAAA,GAAG,EAAEC,SAAS,KAAK,CAAd,GAAkBH,MAAM,CAACa,QAAzB,GAAoCb,MAAM,CAACc,IAArD;AAA2D,IAAA,GAAG,EAAC,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBAEE;AAAK,IAAA,GAAG,EAAEF,IAAI,CAACG,QAAL,GAAgBf,MAAM,CAACgB,KAAvB,GAA+BhB,MAAM,CAACc,IAAhD;AAAsD,IAAA,GAAG,EAAC,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CADH,CADD,CADH,CADF;AAaD;;AAED,eAAeP,IAAf","sourcesContent":["import React from \"react\"\n\nimport * as images from \"./images\"\nimport \"./Maze.css\"\n\nfunction fuckBrain(indexRow, indexCell){\n  switch (indexRow) {\n    case indexRow === 1:\n      console.log('Oranges are $0.59 a pound.');\n      break;\n    case 'Mangoes':\n    case 'Papayas':\n      console.log('Mangoes and papayas are $2.79 a pound.');\n      // expected output: \"Mangoes and papayas are $2.79 a pound.\"\n      break;\n    default:\n      console.log(`Sorry, we are out of ${expr}.`);\n  }\n}\n\n\nfunction Maze({ maze }) {\n  console.log(maze.tiles)\n  return (\n    <div className=\"Maze\">\n      {maze.tiles.map((row, indexRow) => (\n        <div className=\"Maze-row\">\n          {row.map((cell, indexCell) => (\n            indexRow === 0\n            ? <img src={indexCell === 1 ? images.stairsUp : images.wall} alt=\"\" />\n            : <img src={cell.passable ? images.floor : images.wall} alt=\"\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Maze\n"]},"metadata":{},"sourceType":"module"}