{"ast":null,"code":"var _jsxFileName = \"/Users/meka/Sites/frontend-tech-test/src/Maze.js\";\nimport React from \"react\";\nimport * as images from \"./images\";\nimport \"./Maze.css\";\n\nfunction repalceImg(cell) {\n  if (cell.passable) {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: images.stairsUp,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    });\n  }\n}\n\nfunction lol(maze) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Maze\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, maze.tiles.map((row, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Maze-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, row.map(cell => index !== 1 ? /*#__PURE__*/React.createElement(\"img\", {\n    src: cell.passable ? images.floor : images.wall,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: repalceImg(cell),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  })))));\n}\n\nfunction Maze({\n  maze\n}) {\n  console.log(maze.tiles[1]);\n  return lol(maze) // <div className=\"Maze\">\n  //   {maze.tiles.map(row => (\n  //     <div className=\"Maze-row\">\n  //       {row.map(cell => (\n  //         <img src={cell.passable ? images.floor : images.wall} alt=\"\" />\n  //       ))}\n  //     </div>\n  //   ))}\n  // </div>\n  ;\n}\n\nexport default Maze;","map":{"version":3,"sources":["/Users/meka/Sites/frontend-tech-test/src/Maze.js"],"names":["React","images","repalceImg","cell","passable","stairsUp","lol","maze","tiles","map","row","index","floor","wall","Maze","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AACA,OAAO,YAAP;;AAGA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACvB,MAAGA,IAAI,CAACC,QAAR,EAAkB;AAChB,wBACE;AAAK,MAAA,GAAG,EAAEH,MAAM,CAACI,QAAjB;AAA2B,MAAA,GAAG,EAAC,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;AACF;;AAGD,SAASC,GAAT,CAAaC,IAAb,EAAmB;AACjB,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,kBACd;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,GAAG,CAACD,GAAJ,CAAQN,IAAI,IACXQ,KAAK,KAAK,CAAV,gBACE;AAAK,IAAA,GAAG,EAAER,IAAI,CAACC,QAAL,GAAgBH,MAAM,CAACW,KAAvB,GAA+BX,MAAM,CAACY,IAAhD;AAAsD,IAAA,GAAG,EAAC,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBAEE;AAAK,IAAA,GAAG,EAAEX,UAAU,CAACC,IAAD,CAApB;AAA4B,IAAA,GAAG,EAAC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CADH,CADD,CADH,CADF;AAaD;;AAED,SAASW,IAAT,CAAc;AAAEP,EAAAA;AAAF,CAAd,EAAwB;AACtBQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,KAAL,CAAW,CAAX,CAAZ;AACA,SACEF,GAAG,CAACC,IAAD,CADL,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVF;AAYD;;AAED,eAAeO,IAAf","sourcesContent":["import React from \"react\"\n\nimport * as images from \"./images\"\nimport \"./Maze.css\"\n\n\nfunction repalceImg(cell){\n  if(cell.passable) {\n    return (\n      <img src={images.stairsUp} alt=\"\" />\n    )\n  }\n}\n\n\nfunction lol(maze) {\n  return (\n    <div className=\"Maze\">\n      {maze.tiles.map((row, index) => (\n        <div className=\"Maze-row\">\n          {row.map(cell => (\n            index !== 1\n            ? <img src={cell.passable ? images.floor : images.wall} alt=\"\" />\n            : <img src={repalceImg(cell)} alt=\"\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nfunction Maze({ maze }) {\n  console.log(maze.tiles[1])\n  return (\n    lol(maze)\n    // <div className=\"Maze\">\n    //   {maze.tiles.map(row => (\n    //     <div className=\"Maze-row\">\n    //       {row.map(cell => (\n    //         <img src={cell.passable ? images.floor : images.wall} alt=\"\" />\n    //       ))}\n    //     </div>\n    //   ))}\n    // </div>\n  )\n}\n\nexport default Maze\n"]},"metadata":{},"sourceType":"module"}