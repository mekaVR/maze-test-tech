import { Options } from "yargs";
import { Dict } from "../util";
import { Size } from "../domain/common";
import { GeneratorWithConfig } from "../generator/base";
import { ModifierWithConfig } from "../modifier/base";
import { AreaWritableFormat, AreaReadableFormat } from "./files";
interface ArgsBase extends Dict<any> {
    config?: string;
    size?: Size;
    generator?: GeneratorWithConfig<any>;
    modifier?: ModifierWithConfig<any>[];
    format?: AreaWritableFormat;
}
export interface CliArgs extends ArgsBase {
    silent?: boolean;
    saveConfig?: string;
    file?: string;
}
export declare const cliOptions: Dict<Options>;
export interface InteractiveArgs extends ArgsBase {
    directory?: string;
}
export declare const interactiveOptions: Dict<Options>;
export interface DisplayArgs extends Dict<any> {
    format: AreaReadableFormat;
    file: string;
}
export declare const displayOptions: Dict<Options>;
export {};
