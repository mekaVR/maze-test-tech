"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = __importDefault(require("lodash"));
const util_1 = require("../util");
const common_1 = require("../domain/common");
function prepareAmazerConfig(config) {
    const data = {};
    data.size = common_1.Size.stringify(config.size);
    data.generator = prepareFunctionWithConfig(config.generator.generator, config.generator.config);
    const modifiers = [];
    for (let modWithConfig of config.modifiers) {
        modifiers.push(prepareFunctionWithConfig(modWithConfig.modifier, modWithConfig.config));
    }
    if (modifiers.length > 0) {
        data.modifiers = modifiers;
    }
    return data;
}
exports.prepareAmazerConfig = prepareAmazerConfig;
function prepareFunctionWithConfig(func, config) {
    const capitalizedName = util_1.capitalize(func.name);
    if (config === undefined) {
        return capitalizedName;
    }
    else {
        return { [capitalizedName]: prepareConfig(config) };
    }
}
function prepareConfig(config) {
    const result = {};
    for (let key in config) {
        const value = config[key];
        if (value !== undefined) {
            let resultValue = value;
            if (value instanceof Object && lodash_1.default.difference(Object.keys(value), ["width", "height"]).length === 0) {
                resultValue = common_1.Size.stringify(value);
            }
            result[key] = resultValue;
        }
    }
    return result;
}
