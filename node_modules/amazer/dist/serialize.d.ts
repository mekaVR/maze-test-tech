import { Area } from "./domain/area";
/**
 * Set of functions to serialize and deserialize {@link Area}.
 */
export declare namespace serialize {
    /**
     * Serializes the given {@link Area} {@link toBytes to bytes} and encodes
     * the data as base64.
     */
    function toBase64(area: Area): string;
    /**
     * Serializes the given {@link Area} to bytes.
     *
     * The first 4 byte represent the width and height. Each following bit
     * represents if the {@link Tile} is passable, going from `(0, 0)` to
     * `(width - 1, height - 1)`.
     */
    function toBytes(area: Area): Uint8Array;
    /**
     * Deserializes an {@link Area} from a base64 encoded string that was
     * serialized with {@link toBase64}.
     */
    function fromBase64(data: string): Area;
    /**
     * Deserializes an {@link Area} from a byte array that was
     * serialized with {@link toBytes}.
     */
    function fromBytes(bytes: Uint8Array): Area;
}
export default serialize;
